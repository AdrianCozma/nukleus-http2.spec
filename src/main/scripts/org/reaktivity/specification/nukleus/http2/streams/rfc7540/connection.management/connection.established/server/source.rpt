#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newSourceInputRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property sourceHandshake ${nuklei.streams("http2", "source")}
property sourceHandshakeEst ${nuklei.streams("source", "http2#source")}

property newSourceInputId ${nuklei:newStreamId()}
property newSourceCorrelationId ${nuklei:newCorrelationId()}



connect await ROUTED_INPUT
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(sourceHandshake.throttle)}
        option writer ${agrona:oneToOneWriter(sourceHandshake.buffer)}
connected

# begin frame
write [0x00 0x00 0x00 0x01]
write ${newSourceInputId}
write ${newSourceInputRef}
write ${newSourceCorrelationId}
write flush

# flow control frame
read [0x40 0x00 0x00 0x02]
read ${newSourceInputId}
read [0..4]

# data frame (http2 client connection preface)
write [0x00 0x00 0x00 0x02]
write ${newSourceInputId}
write [0x00 0x18]
write "PRI * HTTP/2.0\r\n"
      "\r\n"
      "SM\r\n"
      "\r\n"
write flush

# flow control frame
read [0x40 0x00 0x00 0x02]
read ${newSourceInputId}
read [0..4]

close
closed


connect await ROUTED_OUTPUT
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(sourceHandshakeEst.buffer)}
        option writer ${agrona:oneToOneWriter(sourceHandshakeEst.throttle)}
connected

# begin frame
read [0x00 0x00 0x00 0x01]
read ([0..8]:sourceHandshakeId)
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read ${newSourceCorrelationId}

# flow control frame
write [0x40 0x00 0x00 0x02]
write ${sourceHandshakeId}
write [0x00 0x02 0x00 0x00]
write flush

# data frame (server connection preface - SETTINGS frame)
read [0x00 0x00 0x00 0x02]
read ${sourceHandshakeId}
read [0x00 0x0F]
read [0x00 0x00 0x06]                   # length = 6
     [0x04]                             # HTTP2 SETTINGS frame
     [0x00]                             # flags = 0x00
     [0x00 0x00 0x00 0x00]              # stream_id = 0
     [0x00 0x03 0x00 0x00 0x00 0x64]    # SETTINGS_MAX_CONCURRENT_STREAMS(0x03) = 100

# flow control frame
write [0x40 0x00 0x00 0x02]
write ${sourceHandshakeId}
write [0x13 0x00 0x00 0x00]
write flush

close
closed
